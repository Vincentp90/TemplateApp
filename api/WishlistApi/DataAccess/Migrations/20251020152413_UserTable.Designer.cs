// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(WishlistDbContext))]
    [Migration("20251020152413_UserTable")]
    partial class UserTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataAccess.AppListings.AppListing", b =>
                {
                    b.Property<int>("appid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("appid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("appid"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("appid")
                        .HasName("pk_app_listings");

                    b.ToTable("app_listings", (string)null);
                });

            modelBuilder.Entity("DataAccess.Users.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("createdat")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdat");

                    b.Property<byte[]>("passwordhash")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("passwordhash");

                    b.Property<byte[]>("passwordsalt")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("passwordsalt");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("role");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("username");

                    b.Property<Guid>("uuid")
                        .HasColumnType("uuid")
                        .HasColumnName("uuid");

                    b.HasKey("id")
                        .HasName("pk_users");

                    b.HasIndex("username")
                        .IsUnique()
                        .HasDatabaseName("ix_users_username");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("DataAccess.Wishlist.WishlistItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("appid")
                        .HasColumnType("integer")
                        .HasColumnName("appid");

                    b.Property<DateTimeOffset>("dateadded")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dateadded");

                    b.Property<string>("userid")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("userid");

                    b.HasKey("id")
                        .HasName("pk_wishlist_items");

                    b.HasIndex("appid")
                        .HasDatabaseName("ix_wishlist_items_appid");

                    b.ToTable("wishlist_items", (string)null);
                });

            modelBuilder.Entity("DataAccess.Wishlist.WishlistItem", b =>
                {
                    b.HasOne("DataAccess.AppListings.AppListing", "AppListing")
                        .WithMany()
                        .HasForeignKey("appid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_wishlist_items_app_listings_appid");

                    b.Navigation("AppListing");
                });
#pragma warning restore 612, 618
        }
    }
}
